demo
contributors()
demo()
error.catching
BiocManager::install(c("Rsamtools",
"GenomicFeatures",
"GenomicAlignments",
"BiocParallel",
"magrittr",
"AnnotationDbi",
"DESeq2",
"vsn",
"hexbin"
))
# MAKE SURE BIOCONDUCTOR IS INSTALLED AND LIBRARIES LOADED
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
# MAKE SURE BIOCONDUCTOR IS INSTALLED AND LIBRARIES LOADED
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
# MAKE SURE BIOCONDUCTOR IS INSTALLED AND LIBRARIES LOADED
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
source("http://bioconductor.org/biocLite.R")
biocLite()
BiocManager::install()
a
# MAKE SURE BIOCONDUCTOR IS INSTALLED AND LIBRARIES LOADED
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
source("http://bioconductor.org/biocLite.R")
biocLite()
BiocManager::install()
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="~/R/win-library/3.5")
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="~/R/win-library/3.5")
library("BiocManager", lib.loc="~/R/win-library/3.5")
detach("package:BiocManager", unload=TRUE)
detach("package:BiocInstaller", unload=TRUE)
library("BiocVersion", lib.loc="~/R/win-library/3.5")
detach("package:BiocVersion", unload=TRUE)
# MAKE SURE BIOCONDUCTOR IS INSTALLED AND LIBRARIES LOADED
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
source("http://bioconductor.org/biocLite.R")
biocLite()
BiocManager::install()
detach("package:BiocInstaller", unload=TRUE)
# MAKE SURE BIOCONDUCTOR IS INSTALLED AND LIBRARIES LOADED
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
source("http://bioconductor.org/biocLite.R")
biocLite()
BiocManager::install()
detach("package:BiocInstaller", unload=TRUE)
# MAKE SURE BIOCONDUCTOR IS INSTALLED AND LIBRARIES LOADED
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
source("http://bioconductor.org/biocLite.R")
biocLite()
BiocManager::install()
detach("package:BiocInstaller", unload=TRUE)
biocLite("BiocGenerics")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
BiocManager::install()
biocLite("BiocGenerics")
biocLite("leeBamViews")
BiocManager::install(c("Rsamtools",
"GenomicFeatures",
"GenomicAlignments",
"BiocParallel",
"magrittr",
"AnnotationDbi",
"DESeq2",
"vsn",
"hexbin"
))
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
mydata <- read.table("C:\Users\Nick\Google Drive\IdeaProjects\BaerMA\calculated generation list.txt", header=TRUE,sep=",")
mydata <- read.table("C:/Users/Nick/Google Drive/IdeaProjects/BaerMA/calculated generation list.txt", header=TRUE,sep=",")
mydata
mydata <- read.table("C:/Users/Nick/Google Drive/IdeaProjects/BaerMA/calculated generation list.txt", header=TRUE,sep=",",row.names = "SampleID")
mydata <- read.table("C:/Users/Nick/Google Drive/IdeaProjects/BaerMA/calculated generation list.txt", header=TRUE,sep=",",row.names = "SampleID")
mydata <- read.table("C:/Users/Nick/Google Drive/IdeaProjects/BaerMA/calculated generation list.txt", header=TRUE,sep=",",row.names = "id")
mydata <- read.table("C:/Users/Nick/Google Drive/IdeaProjects/BaerMA/calculated generation list.txt", header=TRUE,sep=",",row.names="id")
mydata <- read.table("C:/Users/Nick/Google Drive/IdeaProjects/BaerMA/calculated generation list.txt", header=TRUE,sep=",")
mydata
sampleGenerationList <- mydata
mydata <- 0
data(sleep)
sleep
dim(sleep)
$extra
$ extra
str(sleep)
summary(sleep)
sampleGenerationList
sampleGenerationList
install.packages("reader")
library(readr)
data("mtcars")
mtcars
write_csv(mtcars,path="mtcars.txt",col_names = TRUE)
write_excel_csv(mtcars,"mtcars.xlsx")
write_excel_csv(mtcars,"mtcars")
write_csv(sampleGenerationList,"sgl.txt")
setwd("C:/Users/Nick/Google Drive/IdeaProjects/BaerMA/")
write_csv(sampleGenerationList,"sgl.txt")
sampleGenerationList
sampleGenerationList$newColumn <- sampleGenerationList$Generation
sampleGenerationList
sum(sampleGenerationList$newColumn,sampleGenerationList$Generation)
head(as.numeric(sampleGenerationList$Generation))
sampleGenerationList$Generation
sampleGenerationList[sampleGenerationList==Extinct] <- -1
sampleGenerationList[sampleGenerationList== "Extinct"] <- -1
sampleGenerationList
